Name of Article,Summarized Text
FL_Brecko,"Federated learning (FL) is a distributed machine learning technique to create a global model by learning from multiple decentralized edge clients. Although FL methods offer several advantages, including scalability and data privacy, they also introduce some risks and drawbacks in terms of computational complexity in the case of heterogeneous devices. This paper provides an overview of the methods used in FL with a focus on edge devices with limited computational resources. Federated learning (FL) is a complex method for handling distributed data training. It enables the cooperative training of high-quality joint models by combining and averaging locally calculated updates submitted by IoT devices. FL has been used in many applications, including medical, Industry 5.0 and IoT, mobile applications, or transportation. The literature does not consider the challenges related to hardware requirements. The article explores the applications and future directions of federated learning in communication and networking. They partially describe the possibilities of deploying AI at the network’s edge, where they list edge devices on which these calculations for AI can be performed. The article focuses on a systematic overview of the technology and methods used in FL and EC. FL is an emerging machine learning system that aims to address the problem of data privacy. It involves multiple clients (such as mobile devices, institutions, organizations, etc.) coordinated with one central or multiple servers that are decentralized. Several states, countries, and companies have been increasingly concerned about data privacy in recent years. There are two types of architecture in FL: centralized and decentralized. Centralized learning is so far deﬁned as the most accurate. However, it has its disadvantages in terms of privacy and security. Communication problems can also represent a graph with time and latency constraints. distributed learning in FL systems, concentrating on IoT cybersecurity within this context. Analysis primarily focuses on security but highlights new difﬁculties and emerging research patterns. FL framework is based on a decentralized server, or the so-called blockchain. user privacy, as their input data remains on the de- vice and only individual weights and parameter gradients are shared. Because clients send updates to their local training parameters to the FL server, they are the most vulnerable attack surface in the FL system. According to experimental ﬁndings, privacy is not a property of inherent collaborative learning algorithms such as FL.  vertical FL is more challenging to implement than horizontal FL because each machine learning algorithm requires a speciﬁc learning protocol to be created. Vertical FL is better suited for joint model training between large businesses because it has a broader range of applications. There are several frameworks and open-source software options available for FL. FATE-Flow. It is used for inference processing, modeling, training, veriﬁcation, and publishing. FATEBoard is a tool to visualize individual ML models, explore them and understand them more easily. The last element that contains the FATE framework is KubeFATE. This element is used to deploy FATE using cloud technologies such as Kubernetes. Clients that participate in the training of the global model. PySyft creates and uses automatic differential privacy to provide strong privacy guarantees to data users. SecFL performs global and local training inside enclaves of Trusted Execution Environments to ensure the integrity of computations against strong adversaries with privileged access. TFF achieves the best feature accuracy on a distributed dataset with ﬁve clients at 49.20%. Not all FL technologies are used in open-source frameworks. Leading companies have built proprietary libraries supplied under a restricted license and not open source. Flower and PySyft have ofﬁcial support for ARM architectures, according to the documentation. We also looked at the possibilities of deploying these frameworks at the network’s edge and on edge devices. FL can be applied in several real-world situations. There are many cases where FL can be used in the Industry 4.0 or Industry 5.0. It makes sense for industrial engineering to adopt FL applications in response to FL’s success in protecting data privacy. For banking, FL needs to be modiﬁed to address several real-world issues. FL can be used to train ML models in vehicles based on their datasets, such as road geometry, collision avoidance, trafﬁc ﬂow, and data from all the sensors available in modern vehicles. FL could facilitate the development of different types of IoT applications in vehicles. The use of FL for security is increasingly required in the ﬁnancial and healthcare sectors. in smart city applications [113] 2019 Industry Utilize FL in an industrial setting for tasks related to visual inspection of products. 2022 Industry Use of FL in the manufacture of components for aerospace companies. 2019 Healthcare Differential private learning for electronic health records via FL [118] 2021 Healthcare Demonstration and adaptation of FL techniques for healthcare and electronic systems in healthcare. Edge devices with limited resources can be found in today’s IoT and industry world. These limitations may be due to size or due to cost. In EC it is possible to use several types of devices that can be deployed at the edge of the network. Communication overhead is the main cause of the increased communication overhead. Reducing the number of communicating devices, the total number of communication rounds, and the size of the model update are the keys to reducing the communication overhead in FL. Heterogeneous FL clients’ limited power or memory capacity and energy consumption can cause speciﬁc issues. The training data of each client in FL depends to a large extent on the use of speciﬁc local devices. The data distribution of connected clients may be quite different from each other. Federated optimization has several key characteristics that distinguish it from a typical distributed optimization problem. Scheduling Techniques Due to the wide use of computationally intensive tasks and applications, it is nec- essary to address the scheduling of tasks. Existing scheduling optimization techniques can be divided into synchronous and asynchronous. Fl requires caution while scheduling procedures, particularly when working with IoT devices that have constrained computational power. The FL process must be highly scalable. In an IoT environment, many clients can participate in model training. Scalability of FL systems is the subject of further studies. Future work could improve communication between devices, increase data transfer, and better coverage. It is possible that future edge devices will use the 5G and 6G networks for communication. Sharing private data makes the network vulnerable to data leakage and privacy. Different participants train at noticeably different times due to the various memory sizes and availability, affecting the number of data samples. Federated learning is a promising approach for utilizing the ever-increasing computa- tional power of the devices on the edge of the network. Privacy is key for applications in healthcare or ﬁnance, as they are inherently extremely sensitive and sharing these data are often impossible. An overview of the FL paradigm, which is gaining popu- larity, is provided in this article. Federated learning enabled digital twins for smart cities: Concepts, recent advances, and future directions. Survey on intelligence Edge Computing in 6G: Characteristics, Challenges, Potential Use Cases, and Market Drivers. A survey on application of machine learning for Internet of Things. A survey on security and privacy of federated learning. Federated Learning for the Internet of Things: Recent Advances and Open Issues. A review of applications in Federated learning for Healthcare Informatics. Federated Learning Approach to Protect Healthcare Data over Big Data Scenario. Federated Learning for Internet of Things: Recent Advances, Taxonomy, and Open Challenges. When Machine Learning Meets Blockchain: A Decentralized, Privacy-preserving and Secure Design. Wang, H.; Muñoz González, L.; Eklund, D.; Raza, S. Non-IID Data Re-Balancing at IoT Edge with Peer-to-Peer Federated Learning for Anomaly Detection. Are the eu gdpr and the california ccpa becoming the de facto global standards for data privacy and protection? Federated Learning in Smart City Sensing: Challenges and Opportunities. Beutel, D.J.; de Gusmão, P.P.; Fernandez-Marques, J.; Topal, T. Qiu, X.; Parcollet, T.; Gao, Y.; Lane, N.D. On-device Federated Learning with Flower. arXiv 2021. A world Where Every Good Question Is Answered. Federated learning for breast density classiﬁcation: A real-world implementation. Privacy-aware service placement for mobile edge computing via federated learning. A Privacy-Preserving Human Mobility Prediction Framework via Federated Learning. A Federated Self-learning Anomaly Detection System for IoT. Federated Learning for Privacy and Incentive. Credit risk assessment from combined bank records using federated learning. Attack detection using Federated Learning in medical cyber-physical systems. Federated learning-based collaborative manufacturing for complex parts. Federated Learning Method for Autonomous Vehicle. Federated Learning on the Road Autonomous Controller Design for Connected and Autonomous Vehicles. A Survey of Recent Advances in Edge-Computing-Powered Artiﬁcial Intelligence of Things. Wang, W.; LI, B. CMFL: Mitigating Communication Overhead for Federated Learning. Wu, C.; Wu, F.; Lyu, L.; Huang, Y.; Xie, X. Communication-efﬁcient federated learning via knowledge distillation. Federated learning on non-IID data: A survey. In Proceedings of the 2022 IEEE 38th International Conference on Data Engineering (ICDE), Kuala Lumpur, Malaysia, 9–12 May 2022; pp. 965–978. Asynchronous Federated Learning for Geospatial Applications. Federated Learning in Vehicular Edge Computing: A Selective Model Aggregation Approach. Scalable and Low-Latency Federated Learning with Cooperative Mobile Edge Networking. Machine Learning for Intelligent-Reﬁecting-Surface-Based Wireless Communication towards 6G. Federated Learning with IRS for Grouped Heterogeneous Training. In Proceedings of the ICASSP 2022—2022 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)"
AEI_Brecko,"This article explores the impact and benefits of digitizing health records, focusing on the care of patients lying at home in the UK. Digitization increases accessibility, improves communication between healthcare pro- fessionals, and offers better monitoring and transparency in patient care. Health record digitization applications are software tools that enable the digitization and storage of patient health records. Some apps also enable doctor-patient commu- nication, online appointment scheduling and management, and real-time tracking of health data and outcomes. These apps improve patient care treatment efficiency and increase patient satisfaction. The objective of this paper is to design and implement a web-based application that facilitates doctors in maintain- ing and accessing patient records. This digital platform aims to streamline the process of updating individual pa- tient profiles with pertinent health information. The paper will describe the development of both fron- tend and backend technologies. System architecture delineates specific roles for its users, with a particular emphasis on two pri- mary roles: patients and doctors. For patients, the system grants exclusive access to their individual health records. Doctor or caregiver possess the capability to access the records of all pa- tients under their care, including those they have personally added or managed. A paper version of this form is shown in Fig. 3. The pediatric tracheostomy safety checklist is a form that contains a list of measures that the caregiver must check and record on the form. The body map form is a special tool used by healthcare professionals to record important information about a pa- tient’s health. The web app is designed to be simple, clear and intuitive, with an emphasis on usability and accessibility. When registering, the user registers us- ing a simple form, where he must fill in a username, email address and password. The dashboard window contains a pair of graphs that provide information about the vital functions of the patient’s body. Paediatric tracheostomy safety checklist protocol is a list of steps that the caregiver must check and record on the form. In the paper version of the form, the list was divided into seven working days and each day was further divided into day and night shifts. A chronologi- cal record was chosen, where the date and day of the week are added to each record. This approach has made it easier and faster to complete the form without having to manually split the records into days and shifts. The application was developed locally and deployed on the MS Azure cloud platform for testing purposes. a scenario designed to test the editing of the caregiver profile. Our final test scenario is shown in Table 3 and aims totest the possibility of displaying the data to patients. The application was generally positively evaluated, and users had no reserva- tions about the design and functionality. The graph high- lights that the application was stable and operated effectively. we developed an efficient system for storing information from medical records. Finally, using the React.js and Express.js frameworks, we successfully created a web application dedicated to digitizing records. The application uses the MongoDB database for safe and efficient data storage. This paper highlights the advancements in web application development and enables the provision of a functional and user-friendly digital solu- tion for health record management. Alexander Brecko is a PhD student at the Department of Cybernetics and Artificial Intelligence, Technical Univer- sity of Koˇ sice. His research is centered around deployment of AI models to the Edge, especially in the area of Parkinson disease diagnostics. Iveta Zolotov´ a is a professor and a leader of the re- search group Intelligent Cybernetic Systems at the DCAI FEEI TUKE."
SAMI2022,"Brief overview of Edge AI accelerators for energy-constrained edge Ladislav Pomˇ s´ ar, Alexander Brecko, Iveta Zolotov´ a Department of Cybernetics and Artificial Intelligence Technical University of Koˇsice, Slovakia. The term AI Accelerators encompass a wide variety of different devices using different technologies. We have included devices with up to 40W TDP. We have excluded devices directly tied to a single device, such as a camera. Some of the accelerators are available in both form fac- tors and will be included in both sections. As some of the boards/sticks do not have official numbers on power draw, we will calculate it using the maximal possible power draw. Huawei Atlas family consists of 200, 300, 500, 800 and 900 series with different purposes and aims. Bearkey has been using Rockchip chips and collaborating with Linaro and 96Boards since at least 2019. Google Coral family is based on the same Edge Tensor Processing Unit (Edge TPU) another Chinese manufacturer that collaborated with 96Boards. Their platform currently features only a single SBC, module and stick. The SBC is called Bitmain Sophon Edge Developer Board (BSEDB) [22] It is powered by Sophon BM1880 ASIC, which can provide up to 1 TOPS or 2 TOPS with Winograd acceleration. The platform should support inference for TF, Open Neural Network Exchange (ONNX), PT and Caffe models. Intel Neural Compute Stick 2 (INCS2) utilizes Intel Movidius Myriad X Vision Processing Unit with 16 SHAVE cores and 4GB of RAM for the acceleration of the deep neural network inference. Google Coral USB Accelerator: Built around the same Edge TPU as Coral family. Orange PI AI Stick Lite (OPAI) is equipped with a Lightspeeur SPR2801S neural accelerator. Rockchip RK1808 AI Compute stick (RKCS) features standalone NPU from RK3399Pro chip. specify the theoretical max performance of the devices, usually, they were not able to specify the power draw of the SBC. We believe that there is a need to examine these devices further and preferably create some kind of guidelines on how, when, and where to deploy AI applications to achieve maximum efficiency and low costs. [Online; accessed 27. Dec. 2020]. [Online]. Available: https://www.n Nvidia.com/ en-us/autonomous-machines/embedded-systems/jetson-xavier-nx. “Huawei Launches the Atlas Intelligent Computing Platform to Fuel an AI Future with Supreme Compute Power,” Oct 2018. Available: http://www.orangepi.org/Orange%20Pi% 20AI%20Stick%202801 [31] “rk1808 ai compute stick user manual v1.2.0,” [Online; accessed 15. Jan. 2021]. [Online]. Available: https://raw.github.com/SeeedDocument/Bazaar Document/master/RK1808 AI Compute Stick User manual EN.pdf [32] ‘Neural Network Stick,’ [Online, accessed 29. Dec. 2020]."
